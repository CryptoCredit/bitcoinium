buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.10.+'
    }
}

apply plugin: 'android'

android {

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    compileSdkVersion 19
    buildToolsVersion '19.0.3'

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
    }

    buildTypes {
        release {
            debuggable false
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

ext {
    xchangeVersion = "2.0.1-SNAPSHOT"
}

repositories {
    maven { url 'https://oss.sonatype.org/content/groups/public' }
}

dependencies {

    compile project(':androidColorPickerPreference')

    //compile 'com.android.support:appcompat-v7:19.0.+'
    compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'
    compile 'com.android.support:support-v4:+'
    compile 'com.fasterxml.jackson.core:jackson-core:2.2.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.2.3'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.2.3'
    compile 'javax.ws.rs:jsr311-api:1.1.1'
    compile('com.github.mmazi:rescu:1.6.1-SNAPSHOT'){
        transitive = false
    }
    compile 'org.slf4j:slf4j-android:1.7.7'
    compile files('libs/libGoogleAnalyticsServices.jar')

    compile("com.xeiam.xchange:xchange-anx:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-core:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-cavirtex:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-campbx:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-btce:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-btcchina:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-bitstamp:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-bitcurex:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-bitcoinium:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-bitcoincharts:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-bitcoinaverage:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-kraken:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-bitfinex:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-justcoin:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-vircurex:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-cryptotrade:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-bter:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-coinbase:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-cexio:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-cryptsy:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-core:$xchangeVersion"){
        transitive = false
    }
    compile("com.xeiam.xchange:xchange-vaultofsatoshi:$xchangeVersion"){
        transitive = false
    }

    // Streaming only
    //compile "com.xeiam.xchange:xchange-coinfloor:$xchangeVersion"
}